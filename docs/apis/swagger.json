{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/v1/components": {
            "get": {
                "description": "get gpud components",
                "produces": [
                    "application/json"
                ],
                "summary": "Fetch all components in gpud",
                "operationId": "getComponents",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/events": {
            "get": {
                "description": "get component Events interface by component name",
                "produces": [
                    "application/json"
                ],
                "summary": "Query component Events interface in gpud",
                "operationId": "getEvents",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Component Name, leave empty to query all components",
                        "name": "component",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v1.LeptonComponentEvents"
                            }
                        }
                    }
                }
            }
        },
        "/v1/info": {
            "get": {
                "description": "get component Events/Metrics/States interface by component name",
                "produces": [
                    "application/json"
                ],
                "summary": "Query component Events/Metrics/States interface in gpud",
                "operationId": "getInfo",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Component Name, leave empty to query all components",
                        "name": "component",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v1.LeptonComponentInfo"
                            }
                        }
                    }
                }
            }
        },
        "/v1/metrics": {
            "get": {
                "description": "get component Metrics interface by component name",
                "produces": [
                    "application/json"
                ],
                "summary": "Query component Metrics interface in gpud",
                "operationId": "getMetrics",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Component Name, leave empty to query all components",
                        "name": "component",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v1.LeptonComponentMetrics"
                            }
                        }
                    }
                }
            }
        },
        "/v1/states": {
            "get": {
                "description": "get component States interface by component name",
                "produces": [
                    "application/json"
                ],
                "summary": "Query component States interface in gpud",
                "operationId": "getStates",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Component Name, leave empty to query all components",
                        "name": "component",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v1.LeptonComponentStates"
                            }
                        }
                    }
                }
            }
        },
        "/v1/update/install": {
            "post": {
                "description": "get current update progress",
                "produces": [
                    "application/json"
                ],
                "summary": "Get current update progress",
                "operationId": "updateInstall",
                "parameters": [
                    {
                        "type": "string",
                        "description": "next version to update",
                        "name": "version",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.UpdateStatus"
                        }
                    }
                }
            }
        },
        "/v1/update/progress": {
            "get": {
                "description": "get current update progress",
                "produces": [
                    "application/json"
                ],
                "summary": "Get current update progress",
                "operationId": "updateProgress",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.UpdateStatus"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "apiv1.Event": {
            "type": "object",
            "properties": {
                "extra_info": {
                    "description": "any extra information the component may want to expose",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "message": {
                    "description": "detailed message of the event",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "time": {
                    "type": "string"
                },
                "type": {
                    "description": "optional: ErrCritical, ErrWarning, Info, Resolution, ...",
                    "type": "string"
                }
            }
        },
        "components.Info": {
            "type": "object",
            "properties": {
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/apiv1.Event"
                    }
                },
                "metrics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/components.Metric"
                    }
                },
                "states": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/apiv1.State"
                    }
                }
            }
        },
        "components.Metric": {
            "type": "object",
            "additionalProperties": true
        },
        "apiv1.State": {
            "type": "object",
            "properties": {
                "error": {
                    "description": "the unprocessed error returned from the component"
                },
                "extra_info": {
                    "description": "any extra information the component may want to expose",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "healthy": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "reason": {
                    "description": "a detailed and processed reason on why the component is not healthy",
                    "type": "string"
                }
            }
        },
        "server.UpdateStatus": {
            "type": "integer",
            "enum": [
                0,
                1,
                2,
                3
            ],
            "x-enum-varnames": [
                "updateStatusInit",
                "updateStatusInProgress",
                "updateStatusFailed",
                "updateStatusFinished"
            ]
        },
        "v1.LeptonComponentEvents": {
            "type": "object",
            "properties": {
                "component": {
                    "type": "string"
                },
                "endTime": {
                    "type": "string"
                },
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/apiv1.Event"
                    }
                },
                "startTime": {
                    "type": "string"
                }
            }
        },
        "v1.LeptonComponentInfo": {
            "type": "object",
            "properties": {
                "component": {
                    "type": "string"
                },
                "endTime": {
                    "type": "string"
                },
                "info": {
                    "$ref": "#/definitions/components.Info"
                },
                "startTime": {
                    "type": "string"
                }
            }
        },
        "v1.LeptonComponentMetrics": {
            "type": "object",
            "properties": {
                "component": {
                    "type": "string"
                },
                "metrics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/components.Metric"
                    }
                }
            }
        },
        "v1.LeptonComponentStates": {
            "type": "object",
            "properties": {
                "component": {
                    "type": "string"
                },
                "states": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/apiv1.State"
                    }
                }
            }
        }
    }
}