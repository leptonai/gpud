apiVersion: apps/v1
kind: DaemonSet

metadata:
  name: {{ .Values.dsName }}
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ .Values.dsName }}
    app.kubernetes.io/instance: {{ .Release.Namespace }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    app.kubernetes.io/component: {{ .Values.dsName }}
    app.kubernetes.io/part-of: {{ .Values.dsName }}

spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Values.dsName }}

  updateStrategy:
    rollingUpdate:
      # pace of rolling update
      # max 1% of daemonset pods can be unavailable at a time
      # e.g., 1 node at a time for 100 node updates
      maxUnavailable: 1%

  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Values.dsName }}
        app.kubernetes.io/instance: {{ .Release.Namespace }}
        app.kubernetes.io/version: {{ .Chart.AppVersion }}
        app.kubernetes.io/component: {{ .Values.dsName }}
        app.kubernetes.io/part-of: {{ .Values.dsName }}

      # this triggers pod restarts + rolling updates
      annotations:
        kubectl.kubernetes.io/restartedAt: {{ now | quote }}

    spec:
      tolerations:
        - operator: "Exists"

      dnsPolicy: ClusterFirstWithHostNet
      hostNetwork: true
      hostPID: true

      terminationGracePeriodSeconds: 10

      # must be enabled to support auto-update (without systemd)
      restartPolicy: Always

      containers:
        - name:  gpud-run

          image: alpine:latest
          imagePullPolicy: Always

          securityContext:
            privileged: true

          resources:
            requests:
              memory: "10Mi"
              cpu: "10m"
            limits:
              memory: "1Gi"
              cpu: "1"

          env:
            - name: GPUD_NO_USAGE_STATS
              value: {{ .Values.gpud.GPUD_NO_USAGE_STATS | quote }}

          command: [ "nsenter"]
          args:
            - "-t"
            - "1"
            - "-m"
            - "-u"
            - "-i"
            - "-n"
            - "-p"
            - "--"
            - "bash"
            - "-c"
            - |-

              curl -fsSL https://pkg.gpud.dev/install.sh | bash -s {{ .Values.gpud.version }}
              if [ $? -ne 0 ]; then echo "download gpud failed"; exit 1; fi;

              which gpud
              gpud --version

              gpud run \
              --listen-address={{ .Values.gpud.listen_address | quote }} \
              --log-level={{ .Values.gpud.log_level | quote }} \
              --endpoint={{ .Values.gpud.endpoint | quote }} \
              --enable-auto-update={{ .Values.gpud.enable_auto_update }} \
              --auto-update-exit-code={{ .Values.gpud.auto_update_exit_code }}

      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
