apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "gpud.fullname" . }}
  labels:
    {{- include "gpud.labels" . | nindent 4 }}
spec:
  # The selector determines which pods the DaemonSet manages.
  # It must match the labels in the pod template.
  selector:
    matchLabels:
      {{- include "gpud.selectorLabels" . | nindent 6 }}
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: {{ .Values.updateStrategy.rollingUpdate.maxUnavailable }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      # Allows for custom pod annotations.
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        # These labels are used by the DaemonSet's selector.
        {{- include "gpud.selectorLabels" . | nindent 8 }}
    spec:
      # --- Pod Identity & Security ---
      serviceAccountName: {{ include "gpud.serviceAccountName" . }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      # --- Node-level Settings & Lifecycle ---
      # Required for the driver to interact with the host's network stack.
      hostNetwork: true
      # Required for the driver to inspect processes on the host.
      hostPID: true
      restartPolicy: Always
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}

      # --- Scheduling ---
      # Mark this pod as a critical add-on to prevent eviction.
      priorityClassName: "system-node-critical"
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      # --- Storage ---
      volumes:
        - name: host-log
          hostPath:
            path: /var/log
        - name: host-pstore
          hostPath:
            path: /var/lib/systemd/pstore
            type: DirectoryOrCreate
        - name: host-dev
          hostPath:
            path: /dev
        - name: lib-gpud
          hostPath:
            path: /var/lib/gpud
        - name: host-machine-id
          hostPath:
            path: /etc/machine-id
            type: FileOrCreate
        - name: host-dev-mem
          hostPath:
            path: /dev/mem
            type: CharDevice
        - name: host-kubelet-vol
          hostPath:
            path: /var/lib/kubelet
            type: DirectoryOrCreate
      {{- if .Values.extraVolumes }}
      {{- toYaml .Values.extraVolumes | nindent 8 }}
      {{- end }}

      {{- if .Values.runtimeClassName }}
      runtimeClassName: {{ .Values.runtimeClassName }}
      {{- end }}

      # --- Containers ---
      {{- with .Values.initContainers }}
      initContainers:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          # Uses the image tag from values.yaml, but defaults to the chart's appVersion if not set.
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}

          command:
            {{- toYaml .Values.gpud.command | nindent 12 }}
          args:
            {{- toYaml .Values.gpud.args | nindent 12 }}

          env:
            - name: GPUD_NO_USAGE_STATS
              value: {{ not .Values.gpud.telemetry.enabled | quote }}

          {{- if .Values.service.enabled }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          {{- end }}

          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          # No readinessProbe is defined
          resources:
            {{- toYaml .Values.resources | nindent 12 }}

          volumeMounts:
            - name: host-log
              mountPath: /var/log
            - name: host-pstore
              mountPath: /var/lib/systemd/pstore
            - name: host-dev
              mountPath: /dev
            - name: lib-gpud
              mountPath: /var/lib/gpud
            - name: host-machine-id
              mountPath: /etc/machine-id
              readOnly: true
            - name: host-dev-mem
              mountPath: /dev/mem
              readOnly: true
            - name: host-kubelet-vol
              mountPath: /var/lib/kubelet
              readOnly: true
          {{- if .Values.extraVolumeMounts }}
          {{- toYaml .Values.extraVolumeMounts | nindent 12 }}
          {{- end }}
        {{- if .Values.nodeLabelExporter.enabled }}
        - name: node-label-exporter
          image: "{{ .Values.nodeLabelExporter.image.repository }}:{{ .Values.nodeLabelExporter.image.tag }}"
          imagePullPolicy: {{ .Values.nodeLabelExporter.image.pullPolicy }}
          command:
            - /bin/sh
            - -ec
            - |
              set -o errexit
              set -o nounset
              set -o pipefail

              tmp_file="${OUTPUT_FILE}.tmp"
              mkdir -p "$(dirname "${OUTPUT_FILE}")"

              while true; do
                if kubectl get node "${NODE_NAME}" \
                  -o jsonpath='{range $k,$v := .metadata.labels}{printf "%s=%s\\n" $k $v}{end}' \
                  > "${tmp_file}"; then
                  mv "${tmp_file}" "${OUTPUT_FILE}"
                else
                  rm -f "${tmp_file}"
                fi
                sleep "${UPDATE_INTERVAL}"
              done
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: OUTPUT_FILE
              value: {{ .Values.nodeLabelExporter.outputFile | quote }}
            - name: UPDATE_INTERVAL
              value: {{ int .Values.nodeLabelExporter.updateIntervalSeconds | quote }}
          {{- with .Values.nodeLabelExporter.extraEnv }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: lib-gpud
              mountPath: /var/lib/gpud
          resources:
            {{- toYaml .Values.nodeLabelExporter.resources | nindent 12 }}
        {{- end }}
